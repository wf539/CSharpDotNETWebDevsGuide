//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.2914.16
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace soapExamplesClient.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    [System.Web.Services.WebServiceBindingAttribute(Name="simpleServiceSoap", Namespace="urn:schemas-syngress-com-soap")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarshalByRefObject))]
    public class simpleService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public simpleService() {
            this.Url = "http://localhost/soapExamples/simpleService.asmx";
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-syngress-com-soap/echo", RequestNamespace="urn:schemas-syngress-com-soap", ResponseNamespace="urn:schemas-syngress-com-soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string echo(string input) {
            object[] results = this.Invoke("echo", new object[] {
                        input});
            return ((string)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult Beginecho(string input, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("echo", new object[] {
                        input}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public string Endecho(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("arithmeticMean", RequestNamespace="urn:schemas-syngress-com-soap", ResponseNamespace="urn:schemas-syngress-com-soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Single arithmeticMean([System.Xml.Serialization.XmlArrayItemAttribute("int", IsNullable=false)] int[] arrayInput) {
            object[] results = this.Invoke("arithmeticMean", new object[] {
                        arrayInput});
            return ((System.Single)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginarithmeticMean(int[] arrayInput, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("arithmeticMean", new object[] {
                        arrayInput}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.Single EndarithmeticMean(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Single)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getCounterInfo", RequestNamespace="urn:schemas-syngress-com-soap", ResponseNamespace="urn:schemas-syngress-com-soap", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PerformanceCounter getCounterInfo(string categoryName, string counterName, string instanceName) {
            object[] results = this.Invoke("getCounterInfo", new object[] {
                        categoryName,
                        counterName,
                        instanceName});
            return ((PerformanceCounter)(results[0]));
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BegingetCounterInfo(string categoryName, string counterName, string instanceName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCounterInfo", new object[] {
                        categoryName,
                        counterName,
                        instanceName}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public PerformanceCounter EndgetCounterInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PerformanceCounter)(results[0]));
        }
    }
    
    public class PerformanceCounter : Component {
        
        public string CategoryName;
        
        public string CounterName;
        
        public string InstanceName;
        
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ReadOnly = true;
        
        [System.ComponentModel.DefaultValueAttribute(".")]
        public string MachineName = ".";
        
        public long RawValue;
    }
    
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PerformanceCounter))]
    public class Component : MarshalByRefObject {
        
        public ISite Site;
    }
    
    public abstract class ISite {
        
        public string Name;
    }
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-syngress-com-soap")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Component))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PerformanceCounter))]
    public abstract class MarshalByRefObject {
    }
}
