//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.2914.16
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace jokesClient.userAdmin {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    [System.Web.Services.WebServiceBindingAttribute(Name="userAdminSoap", Namespace="urn:schemas-syngress-com-soap")]
    public class userAdmin : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public userAdmin() {
            this.Url = "http://localhost/jokesService/userAdmin.asmx";
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("addUser", RequestNamespace="urn:schemas-syngress-com-soap:userAdmin", ResponseNamespace="urn:schemas-syngress-com-soap:userAdmin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addUser(string userName, string password) {
            this.Invoke("addUser", new object[] {
                        userName,
                        password});
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginaddUser(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addUser", new object[] {
                        userName,
                        password}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public void EndaddUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("addModerator", RequestNamespace="urn:schemas-syngress-com-soap:userAdmin", ResponseNamespace="urn:schemas-syngress-com-soap:userAdmin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addModerator(string userName, string password, string newModerator) {
            this.Invoke("addModerator", new object[] {
                        userName,
                        password,
                        newModerator});
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BeginaddModerator(string userName, string password, string newModerator, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addModerator", new object[] {
                        userName,
                        password,
                        newModerator}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public void EndaddModerator(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("checkUser", RequestNamespace="urn:schemas-syngress-com-soap:userAdmin", ResponseNamespace="urn:schemas-syngress-com-soap:userAdmin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void checkUser(string userName, string password, bool isModerator) {
            this.Invoke("checkUser", new object[] {
                        userName,
                        password,
                        isModerator});
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public System.IAsyncResult BegincheckUser(string userName, string password, bool isModerator, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("checkUser", new object[] {
                        userName,
                        password,
                        isModerator}, callback, asyncState);
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        public void EndcheckUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
}
